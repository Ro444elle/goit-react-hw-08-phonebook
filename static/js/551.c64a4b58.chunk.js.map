{"version":3,"file":"static/js/551.c64a4b58.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/Filter/Filter.jsx","pages/ContactsPage/ContactPage.jsx"],"sourcesContent":["export const selectContact = state => state.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectFilter = state => state.contacts.filter;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from 'redux/operations';\r\nimport { selectFilter } from 'redux/selectors';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Collapse,\r\n  IconButton,\r\n  Paper,\r\n} from '@mui/material';\r\nimport ContactsIcon from '@mui/icons-material/Contacts';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport theme from '../../themes';\r\n\r\nexport default function ContactList({ contacts }) {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectFilter);\r\n  const [openContactId, setOpenContactId] = useState(null);\r\n\r\n  const filteredContacts = contacts?.filter(\r\n    contact =>\r\n      contact.name && contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const handleContactClick = contactId => {\r\n    if (openContactId === contactId) {\r\n      setOpenContactId(null);\r\n    } else {\r\n      setOpenContactId(contactId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <List>\r\n        {filteredContacts.map(contact => (\r\n          <React.Fragment key={contact.id}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <ContactsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                sx={{ cursor: 'pointer' }}\r\n                primary={contact.name}\r\n                onClick={() => handleContactClick(contact.id)}\r\n              />\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => dispatch(deleteContact(contact.id))}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ color: theme.palette.secondary.light }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n\r\n            <Collapse\r\n              in={openContactId === contact.id}\r\n              timeout=\"auto\"\r\n              unmountOnExit\r\n            >\r\n              <ListItem>\r\n                <ListItemText primary={`Phone : ${contact.phoneNumber}`} />\r\n              </ListItem>\r\n            </Collapse>\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n// <ul>\r\n//   {filteredContacts.map(contact => (\r\n//     <li key={contact.id}>\r\n//       <ContactItem contact={contact} />\r\n//       <button onClick={() => dispatch(deleteContact(contact.id))}>\r\n//         Delete\r\n//       </button>\r\n//     </li>\r\n//   ))}\r\n// </ul>\r\n//   );\r\n// }\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { TextField } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport { FormControl, FormLabel } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createContact } from 'redux/operations';\r\n\r\nconst textFieldStyle = {\r\n  width: '100%',\r\n  marginBottom: '10px',\r\n  marginTop: '10px',\r\n};\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    const newContact = {\r\n      name: values.name,\r\n      number: values.number,\r\n    };\r\n    dispatch(createContact(newContact));\r\n    actions.resetForm();\r\n  };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n      <Form>\r\n        <FormControl sx={{ padding: '20px' }}>\r\n          <>\r\n            <FormLabel>Enter Name</FormLabel>\r\n            <Field\r\n              as={TextField}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Z]+(([ \\\\-][a-zA-Z ])?[a-zA-Z]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              placeholder=\"Enter a name\"\r\n              sx={{ width: '100%' }}\r\n            ></Field>\r\n            <FormLabel>Enter a phone number</FormLabel>\r\n            <Field\r\n              as={TextField}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              placeholder=\"Enter a phone number\"\r\n              sx={{ textFieldStyle }}\r\n            ></Field>\r\n            <Button\r\n              sx={{ marginTop: '10px' }}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Add Contact\r\n            </Button>\r\n          </>\r\n        </FormControl>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setFilter } from 'redux/operations';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Box, InputAdornment, Paper } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilterChange = value => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Paper>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          onChange={e => handleFilterChange(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n                <span sx={{ marginLeft: '4px' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ borderRadius: '20px', padding: '20px' }}\r\n          placeholder=\"Search by name\"\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/ContactList/Filter/Filter';\r\nimport { selectIsLoading } from 'redux/selectors';\r\nimport { fetchContacts } from 'redux/operations';\r\nimport { selectContact } from 'redux/selectors';\r\nimport { Paper } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function ContactPage() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const contacts = useSelector(selectContact);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        variant=\"h3\"\r\n        component=\"h3\"\r\n        align=\"center\"\r\n        sx={{ marginTop: '10px', marginBottom: '20px' }}\r\n      >\r\n        Welcome to your Home Page\r\n      </Typography>\r\n      <Paper elevation={24}>\r\n        <ContactForm />\r\n\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h4\"\r\n          sx={{\r\n            marginLeft: '20px',\r\n            marginTop: '10px',\r\n          }}\r\n        >\r\n          Contacts all\r\n        </Typography>\r\n        <Filter />\r\n        {isLoading ? (\r\n          <p>Loading Contacts</p>\r\n        ) : (\r\n          <ContactList contacts={contacts} />\r\n        )}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n"],"names":["selectContact","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","ContactList","dispatch","useDispatch","useSelector","useState","openContactId","setOpenContactId","filteredContacts","contact","name","toLowerCase","includes","Paper","List","map","ListItem","ListItemIcon","Contacts","ListItemText","sx","cursor","primary","onClick","contactId","id","IconButton","deleteContact","variant","size","color","theme","Delete","Collapse","in","timeout","unmountOnExit","phoneNumber","textFieldStyle","width","marginBottom","marginTop","ContactForm","initialValues","number","onSubmit","values","actions","newContact","createContact","resetForm","FormControl","padding","FormLabel","as","TextField","type","pattern","title","required","placeholder","Button","Filter","Box","fullWidth","onChange","e","value","target","setFilter","InputProps","startAdornment","InputAdornment","position","Search","marginLeft","borderRadius","ContactPage","useEffect","fetchContacts","Typography","component","align","elevation"],"sourceRoot":""}