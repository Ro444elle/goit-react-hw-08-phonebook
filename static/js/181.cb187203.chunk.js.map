{"version":3,"file":"static/js/181.cb187203.chunk.js","mappings":"qNAGe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,OACE,2BACGA,EAAQC,KADX,MACoBD,EAAQE,SAG/B,CCRD,MAAyB,4B,SCDZC,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACrBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,MAAnB,ECMlB,SAASC,EAAT,GAAoC,IAAbN,EAAY,EAAZA,SAC9BO,GAAWC,EAAAA,EAAAA,MACXH,GAASI,EAAAA,EAAAA,IAAYL,GAErBM,EAAgB,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAUK,QACjC,SAAAV,GAAO,OACLA,EAAQC,MAAQD,EAAQC,KAAKe,cAAcC,SAASP,EAAOM,cADtD,IAIT,OACE,wBACGD,EAAiBG,KAAI,SAAAlB,GAAO,OAC3B,2BACE,SAACD,EAAD,CAAaC,QAASA,KACtB,mBACEmB,QAAS,kBAAMP,GAASQ,EAAAA,EAAAA,IAAcpB,EAAQqB,IAArC,EACTC,UAAWC,EAFb,sBAFOvB,EAAQqB,GADU,KAalC,C,cC/BD,EAAyB,4BCKV,SAASG,IACtB,IAAMZ,GAAWC,EAAAA,EAAAA,MAejB,OACE,SAAC,KAAD,CAAQY,cAfY,CACpBxB,KAAM,GACNC,OAAQ,IAa8BwB,SAVnB,SAACC,EAAQC,GAC5B,IAAMC,EAAa,CACjB5B,KAAM0B,EAAO1B,KACbC,OAAQyB,EAAOzB,QAEjBU,GAASkB,EAAAA,EAAAA,IAAcD,IACvBD,EAAQG,WACT,EAGC,UACE,UAAC,KAAD,YACE,kCACA,SAAC,KAAD,CACEC,KAAK,OACL/B,KAAK,OACLgC,QAAQ,8CACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,kBAGd,oCACA,SAAC,KAAD,CACEJ,KAAK,MACL/B,KAAK,SACLgC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,0BAGd,mBAAQd,UAAWC,EAAeS,KAAK,SAAvC,6BAMP,CC9Cc,SAASK,IACtB,IAAMzB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,kBAAOyB,QAAQ,SAAf,8BACA,kBACEN,KAAK,OACLX,GAAG,SACHkB,SAAU,SAAAC,GAAC,OAVUC,EAUaD,EAAEE,OAAOD,WAT/C7B,GAAS+B,EAAAA,EAAAA,IAAUF,IADM,IAAAA,CAUV,EACXL,YAAY,qBAInB,CCbc,SAASQ,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXL,GAAYM,EAAAA,EAAAA,IAAYP,GACxBF,GAAWS,EAAAA,EAAAA,IAAYX,GAM7B,OAJA0C,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,iCACE,0CACA,SAACY,EAAD,KACA,sCACA,SAACa,EAAD,IACC7B,GACC,6CAEA,SAACG,EAAD,CAAaN,SAAUA,MAI9B,C","sources":["components/ContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactList/Filter/Filter.jsx","pages/ContactsPage/ContactPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactItem({ contact }) {\r\n  return (\r\n    <div>\r\n      {contact.name} - {contact.number}\r\n    </div>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\"};","export const selectContact = state => state.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectFilter = state => state.contacts.filter;\r\n","import React from 'react';\r\n\r\nimport ContactItem from './ContactItem/ContactItem';\r\nimport styles from './ContactList.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from 'redux/operations';\r\nimport { selectFilter } from 'redux/selectors';\r\n\r\nexport default function ContactList({ contacts }) {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectFilter);\r\n\r\n  const filteredContacts = contacts?.filter(\r\n    contact =>\r\n      contact.name && contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(contact => (\r\n        <li key={contact.id}>\r\n          <ContactItem contact={contact} />\r\n          <button\r\n            onClick={() => dispatch(deleteContact(contact.id))}\r\n            className={styles.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\"};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport styles from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createContact } from 'redux/operations';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    const newContact = {\r\n      name: values.name,\r\n      number: values.number,\r\n    };\r\n    dispatch(createContact(newContact));\r\n    actions.resetForm();\r\n  };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n      <Form>\r\n        <h3>Name</h3>\r\n        <Field\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Z]+(([ \\\\-][a-zA-Z ])?[a-zA-Z]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          placeholder=\"Enter a name\"\r\n        />\r\n\r\n        <h3>Number</h3>\r\n        <Field\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"Enter a phone number\"\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { setFilter } from 'redux/operations';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilterChange = value => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"filter\">Filter by Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        onChange={e => handleFilterChange(e.target.value)}\r\n        placeholder=\"Search by name\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/ContactList/Filter/Filter';\nimport { selectIsLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { selectContact } from 'redux/selectors';\n\nexport default function ContactPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Phonebook</title>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading ? (\n        <p>Loading Contacts</p>\n      ) : (\n        <ContactList contacts={contacts} />\n      )}\n    </>\n  );\n}\n"],"names":["ContactItem","contact","name","number","selectContact","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","ContactList","dispatch","useDispatch","useSelector","filteredContacts","toLowerCase","includes","map","onClick","deleteContact","id","className","styles","ContactForm","initialValues","onSubmit","values","actions","newContact","createContact","resetForm","type","pattern","title","required","placeholder","Filter","htmlFor","onChange","e","value","target","setFilter","ContactPage","useEffect","fetchContacts"],"sourceRoot":""}